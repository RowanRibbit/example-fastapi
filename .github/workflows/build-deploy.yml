name: Build and Deploy Code

on: [push, pull_request]

# push, for multiple, [push, pull_request] on every branch, but what if you want specific branches?
#   push: # define branches
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# create a job, a set of steps that execute on the same runner 
jobs:
  job1: 
    environment:
      name: DATABASE_HOSTNAME # oops   
    env:       
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}       
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}       
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}       
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}       
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}       
      SECRET_KEY: ${{secrets.SECRET_KEY}}       
      ALGORITHM: ${{secrets.ALGORITHM}}       
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}} 
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test 
        ports:
          - 5432:5432  
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with: 
          python-version: "3.10"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run pytest tests # | does list of commands
        run: |
          pip install pytest
          pytest

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./ # path to the context of the Dockerfile
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi_dockerhub:tagname
        cache-from: type=local/src=/tml/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image Digest
      run: echo ${{ steps.docker_build.outputs.digest }}
# will fail at the moment, no Environment Vars
# now we've added env: we'll not get Env Var errors, but will need to set up DB on runner or point it towards an external DB
# Similarly want to store them as secrets, not in the code: go to action secrets on github
# Docker https://youtu.be/0sOvCWFmrtA?t=66250


# docs.docker.com
# get our access token from docker account settings > security > new access token
# Select Github Actions, then create and copy the access token
# Want to create a secret for User Name and Acccess Token for DOCKER_HUB_USERNAME and DOCKER_HUB_ACCESS_TOKEN
# Go to Set Up CI/CD, Configure GitHub actions

  
